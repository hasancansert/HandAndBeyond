/*
 * PCListener.c
 *
 *  Created on: Sep 21, 2023
 *      Author: baris
 */
#include <MotorDriver.h>
#include <PCListener.h>
#include "FreeRTOS.h"
#include "task.h"
#include "semphr.h"

void UI_Init(void){

	HAL_UART_Receive_IT(&huart2, buffer, COMMAND_SIZE);
}

void UI_Receive_Handler(void) {

    uint8_t command = buffer[0];
    uint8_t motor_id = buffer[1];
    uint16_t value = *(uint16_t *) (buffer + 2);

    switch(command) {
        case COMMAND_SET_MOTOR_POSITION:
            set_motor_position(motor_id, value);
            break;

        case COMMAND_SET_MOTOR_SPEED:
            set_motor_speed(motor_id, value);
            break;

        case COMMAND_SET_MOTOR_ACCELERATION:
            set_motor_acceleration(motor_id, value);
            break;

        case COMMAND_HAND_POSITION_POINTING:
		   set_hand_position(POINTING);
		   break;
	   case COMMAND_HAND_POSITION_FIST:
		   set_hand_position(FIST);
		   break;

	   case COMMAND_HAND_POSITION_ROCK:
		   set_hand_position(ROCK);
		   break;

	   case COMMAND_HAND_POSITION_FUCK:
		   set_hand_position(FUCK);
		   break;

	   case COMMAND_HAND_POSITION_THUMB:
		   set_hand_position(THUMB);
		   break;

	   case COMMAND_HAND_POSITION_OPEN:
		   set_hand_position(OPEN);
		   break;

        default:
            // Unknown command
            break;
    }
}



void UARTReceiveTask(void const *argument){

	for(;;){
		xSemaphoreTake(BinarySemaphoreUARTHandle, portMAX_DELAY);
		UI_Receive_Handler();
	}

}

void UARTReceiveTaskInit(void){
	xTaskCreate(UARTReceiveTask, "UART Task", 4096, NULL, tskIDLE_PRIORITY + 2, NULL);
}

void USART2_IRQHandler(void)
{
  /* USER CODE BEGIN USART2_IRQn 0 */
	if (__HAL_UART_GET_FLAG(&huart2, UART_FLAG_RXNE))
	{
		// Reading the received byte clears the RXNE flag
		uint8_t byte = (uint8_t)(huart2.Instance->DR & 0xFF);

		// Store the byte in the buffer
		if (rx_index < RX_BUFFER_SIZE)
		{
			rx_buffer[rx_index++] = byte;
		}
		else
		{
			rx_index = 0; // Buffer overflow, start over
		}
	}

  /* USER CODE END USART2_IRQn 0 */
	HAL_UART_IRQHandler(&huart2);
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
  if (huart->Instance == USART2)
  {
	  UI_Receive_Handler();
  }
}








